
%%
input_image = imread('C:\Users\Surafel Nigussie\Documents\Matlab\Images\BGSUBT (1).JPG');
background = imread('C:\Users\Surafel Nigussie\Documents\Matlab\Images\BGSUBT (2).JPG');

%%
% Perform image difference from the new image and the background image
threshold = 8;
difference = (abs(input_image(:,:,1) - background(:,:,1)) > threshold) | (abs(input_image(:,:,2) - background(:,:,2)) > threshold) ...
                    | (abs(input_image(:,:,3) - background(:,:,3)) > threshold);    
figure, imshow(difference);       

%%
% Performs morphological closing (dilation followed by erosion).
bwmrph = bwmorph(difference,'close');
figure, imshow(bwmrph);

%%
% Performs morphological opening (erosion followed by dilation).
difference = bwmorph(bwmrph,'open');        
difference = bwmorph(difference,'erode',2);
figure, imshow(difference);

%%
% Select the biggest object
big_object = bwlabel(difference,8);
figure, imshow(big_object);

%%
% Measure properties of image regions such as: 'Area', 'Centroid', and 'Box'
object = regionprops(big_object);

%%
% Number of objects in in the image.
N = size(object,1); 

%%
% Return whether no object in the image
if N < 1||isempty(object) 
    return
end

%%
% Remove holes less than 200 pixels
holeFilled = find([object.Area]<200);
if ~isempty(holeFilled)
    object(holeFilled)=[ ];
end

%%
% Count objects
N = size(object,1);
if N < 1 || isempty(object)
    return
end

%%
Ibwopen = bwareaopen(Ivalues, 200);
Ifill = imfill(Ibwopen,'holes');
figure, imshow(big_object);

%%
% Draw a rectangle and center point for every object in the image
for n = 1 : N
    hold on
    centroid = object(n).Centroid;
    C_X = centroid(1);
    C_Y = centroid(2);
    rectangle('Position',object(n).BoundingBox,'EdgeColor','g','LineWidth',1);
    plot(C_X,C_Y,'Color','g','Marker','+','LineWidth',1);
    hold off
end